name: CI/CD

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

env:
  CCACHE_DIR: /tmp/ccache
  CMAKE_ARGS: -DCMAKE_CXX_FLAGS="-O3"

jobs:
  clang-format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.ref || github.ref }}

    - name: Install clang-format
      run: sudo apt-get update && sudo apt-get install -y clang-format

    - name: clang-format
      run: |
        FILES=$(find . -type f -regex '.*\.\(cpp\|hpp\|h\)$' \
                -not -path "./build/*" \
                -not -path "./third_party/*")
        
        if [ -z "$FILES" ]; then
          echo "No C++ files found. Skipping."
          exit 0
        fi

        echo "Checking formatting for files:"
        echo "$FILES"

        clang-format --dry-run --Werror --style=file $FILES || \
          (echo "❌ Formatting errors found! Run 'clang-format -i YOUR_FILE' to fix."; exit 1)
          
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    strategy:
      matrix:
        std: [11, 14, 17, 20]
        include:
          - std: 11
            cache-suffix: v1
          - std: 14
            cache-suffix: v1
          - std: 17
            cache-suffix: v2
          - std: 20
            cache-suffix: v2
    steps:
    - uses: actions/checkout@v4

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache
          /usr/local
          App/build
          /tmp/ccache
        key: ${{ runner.os }}-deps-${{ matrix.cache-suffix }}-${{ hashFiles('**/CMakeLists.txt') }}

    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: ccache-${{ matrix.std }}-${{ github.ref }}

    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends \
          cmake \
          libsfml-dev \
          g++-10 \
          ccache \
          zstd
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 100
        echo "CC=/usr/lib/ccache/gcc" >> $GITHUB_ENV
        echo "CXX=/usr/lib/ccache/g++" >> $GITHUB_ENV

    - name: Configure
      run: |
        mkdir -p App/build && cd App/build
        cmake .. \
          -DCMAKE_CXX_COMPILER=g++-10 \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_CXX_STANDARD=${{ matrix.std }} \
          $CMAKE_ARGS

    - name: Build
      working-directory: ./App/build
      run: |
        cmake --build . --config Release -- -j $(($(nproc) + 1))
        ctest --output-on-failure -j $CTEST_PARALLEL_LEVEL

    - name: Store artifacts
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: build-output-cpp${{ matrix.std }}
        path: |
          App/build/
          App/ImageEditor
        retention-days: 1

    - name: Show ccache stats
      run: ccache -s
